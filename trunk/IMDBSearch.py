#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# generated by wxGlade 0.4cvs on Mon Aug 28 00:16:09 2006

import wx

import re
import webbrowser
import globals
 

class IMDBSearch(wx.Dialog):
    def __init__(self,parent,imdb_id, *args, **kwds):
        self.imdb_id = imdb_id
	self.parent = parent
        # begin wxGlade: IMDBSearch.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE|wx.RESIZE_BORDER|wx.THICK_FRAME
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_3 = wx.StaticText(self, -1, _("Search by:"))
        self.label_4 = wx.StaticText(self, -1, _("MOVIE TITLE or IMDB ID: "))
        self.text_search = wx.TextCtrl(self, -1, "")
        self.button_search = wx.Button(self, -1, _("SEARCH"))
        self.button_details = wx.Button(self, -1, _("IMDB details"))
        self.static_line_1 = wx.StaticLine(self, -1)
        self.list_movies_imdb = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.LC_SINGLE_SEL|wx.SUNKEN_BORDER)
        self.button_cancel = wx.Button(self, -1, _("Cancel"))
        self.button_ok = wx.Button(self, -1, _("OK"))

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
	self.imdbserver = globals.imdbserver
        self.list_movies_imdb.InsertColumn(0,_("IMBD ID"))
        self.list_movies_imdb.InsertColumn(1,_("Title"))
	self.list_movies_imdb.SetColumnWidth(1,200)
        self.text_search.SetValue(self.imdb_id)
	self.Bind(wx.EVT_TEXT, self.OnChangeComboFiles,self.text_search)
	self.Bind(wx.EVT_BUTTON, self.OnButtonSearch, self.button_search)
	self.Bind(wx.EVT_BUTTON, self.OnButtonCancel, self.button_cancel)
	self.Bind(wx.EVT_BUTTON, self.OnButtonOK, self.button_ok)
	self.Bind(wx.EVT_BUTTON, self.OnButtonDetails, self.button_details)
	
	self.Bind(wx.EVT_LIST_ITEM_SELECTED, self.OnSelectItem, self.list_movies_imdb)
	self.Bind(wx.EVT_LIST_ITEM_DESELECTED, self.OnDeselectItem, self.list_movies_imdb)
	self.Bind(wx.EVT_LIST_ITEM_ACTIVATED, self.OnDClickItem, self.list_movies_imdb)

	
	self.OnChangeComboFiles(wx.EVT_TEXT)
        # begin wxGlade: IMDBSearch.__set_properties
        self.SetTitle(_("IMDB search dialog:"))
        self.SetSize((651, 379))
        self.text_search.SetMinSize((287, 27))
        self.button_search.SetDefault()
        self.button_details.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: IMDBSearch.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(self.label_3, 0, wx.ADJUST_MINSIZE, 0)
        sizer_3.Add(self.label_4, 0, wx.ADJUST_MINSIZE, 0)
        sizer_3.Add(self.text_search, 0, wx.ADJUST_MINSIZE, 0)
        sizer_2.Add(sizer_3, 0, wx.EXPAND, 0)
        sizer_5.Add(self.button_search, 0, wx.ADJUST_MINSIZE, 0)
        sizer_5.Add((20, 0), 1, wx.ADJUST_MINSIZE, 0)
        sizer_5.Add(self.button_details, 0, wx.ADJUST_MINSIZE, 0)
        sizer_2.Add(sizer_5, 1, wx.EXPAND, 0)
        sizer_2.Add(self.static_line_1, 0, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 0, wx.EXPAND, 0)
        sizer_1.Add(self.list_movies_imdb, 1, wx.EXPAND, 0)
        sizer_4.Add(self.button_cancel, 0, wx.ADJUST_MINSIZE, 0)
        sizer_4.Add(self.button_ok, 0, wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(sizer_4, 0, wx.ALIGN_RIGHT, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade
    def OnChangeComboFiles(self,evt):
        if self.text_search.GetValue():
	    self.button_search.Enable()
	else:
            self.button_search.Disable()

        self.Refresh()
    
    def OnButtonSearch(self,evt):
	self.list_movies_imdb.DeleteAllItems()
	self.movietitles = {}
	wx.BeginBusyCursor()
	info = wx.BusyInfo(_("Retrieving info from IMDB server, please wait...")) 
	    
	search_text = self.text_search.GetValue()

	if self.DetectTitle(search_text):
	    #It's movie title
	    try:
		nameurl = self.text_search.GetValue()
		#nameurl = urllib.pathname2url(unicode(self.text_search.GetValue()).encode("latin-1","replace")).replace("%20"," ")
		#nameurl = unicode(self.text_search.GetValue()).encode("latin-1","replace")
		movie_list = self.imdbserver.search_movie(nameurl)
	    except: 
		error = _("Error requesting Title in IMDB Server") + "\n" +  _("Try searching by IMDB ID number.")
		globals.Log(error)
		wx.MessageBox(error)
		wx.EndBusyCursor()
		return
	    
	    for movie in movie_list:
		imdb_id = self.imdbserver.get_imdbID(movie)
		title = movie['long imdb title']
		item = self.list_movies_imdb.Append([imdb_id,title])
		self.movietitles[imdb_id] = title
	    
	else:
	    #It's movie ID
	    imdb_id = self.text_search.GetValue()
	    try:
		movie = self.imdbserver.get_movie(imdb_id)
		imdb_id= self.imdbserver.get_imdbID(movie)
		title = movie['long imdb title']
		self.list_movies_imdb.Append([imdb_id,title])
		self.movietitles[imdb_id] = title
	    except:
		wx.MessageBox(_("Error getting the IMDB info of %s") % imdb_id)
	
	wx.EndBusyCursor()
	self.list_movies_imdb.SetColumnWidth(1,wx.LIST_AUTOSIZE)
    
    def DetectTitle(self,search_text):
	result = re.search('\A[0-9]{1,7}$', search_text)
	    
	is_title = False
	
	if result and len(search_text) <= 4:
	    dlg = wx.MessageDialog(
		    None,
		    _("The number %s is the ID of the movie?") % search_text,
		    _("IMBD ID or MOVIE TITLE disambiguation"),
		    wx.YES_NO | wx.ICON_QUESTION 
		    )
	    userChoice = dlg.ShowModal()
	    
	    if userChoice == wx.ID_NO:
		is_title = True
	
	if is_title or not result:
	    return True
	else:
	    return False
		    
    def OnButtonCancel(self,evt):
	self.Destroy()
    def OnButtonOK(self,evt):
	if not self.list_movies_imdb.GetSelectedItemCount():
	    search_text = self.text_search.GetValue()

	    if self.DetectTitle(search_text):
		#It's movie title
		wx.MessageBox(_("You must search the movie title and select an IMDB ID"))
		return
	    else:
		imdb_id = self.text_search.GetValue()
		info = wx.BusyInfo(_("Retrieving info from IMDB server, please wait...")) 
		try:
		    movie = self.imdbserver.get_movie(imdb_id)
		    imdb_id= self.imdbserver.get_imdbID(movie)
		    title = movie['long imdb title']
		    self.movietitles[imdb_id] = title
		except:
		    wx.MessageBox(_("Error getting the IMDB info of %s") % imdb_id)
		    return
		
		
	else:
	    item = self.list_movies_imdb.GetFirstSelected()
	    imdb_id = self.list_movies_imdb.GetItemText(item)
	
	globals.DownloadCover(imdb_id)
		
	self.parent.SetText_Imdb(imdb_id,self.movietitles[imdb_id])
	self.Destroy()
	
    def OnSelectItem(self,evt):
	self.button_details.Enable()
	
    def OnDeselectItem(self,evt):
	self.button_details.Disable()
	
    def OnButtonDetails(self,evt):
	item = self.list_movies_imdb.GetFirstSelected()
	imdb_id = self.list_movies_imdb.GetItemText(item)
	
	try:
	    webbrowser.open("http://www.imdb.com/title/tt" + imdb_id)
	except:
	    msg = _("Error opening link")
            wx.MessageBox(msg+ " http://www.imdb.com/title/tt" + imdb_id)
	
    def OnDClickItem(self,evt):
	#The same as OnOK
	self.OnButtonOK(wx.EVT_BUTTON)
	

# end of class IMDBSearch


