#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# generated by wxGlade 0.4cvs on Mon Aug 28 23:51:58 2006

import wx
from xmlrpclib import Server,Transport
import globals

class PanelServers(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: PanelServers.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.sizer_2_staticbox = wx.StaticBox(self, -1, _("Servers configuration:"))
        self.sizer_3_staticbox = wx.StaticBox(self, -1, _("Proxy Parameters:"))
        self.sizer_OSDB_staticbox = wx.StaticBox(self, -1, _("OSDB protocol:"))
        self.label_1 = wx.StaticText(self, -1, _("Host address: "))
        self.combo_osdb_server = wx.TextCtrl(self, -1, "")
        self.button_testosdb = wx.Button(self, -1, _("Get server info"))
        self.static_line_1 = wx.StaticLine(self, -1)
        self.label_2 = wx.StaticText(self, -1, _("Server:"))
        self.text_proxyserver = wx.TextCtrl(self, -1, "")
        self.label_3 = wx.StaticText(self, -1, _("Port:"))
        self.text_proxyport = wx.TextCtrl(self, -1, "")
        self.label_4 = wx.StaticText(self, -1, _("User:"))
        self.text_proxyuser = wx.TextCtrl(self, -1, "")
        self.label_5 = wx.StaticText(self, -1, _("Password:"))
        self.text_proxypass = wx.TextCtrl(self, -1, "", style=wx.TE_PASSWORD)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: PanelServers.__set_properties
        self.label_2.SetMinSize((67, 13))
        self.text_proxyport.SetMinSize((40, -1))
        self.label_4.SetMinSize((67, 13))
        self.label_5.SetMinSize((67, 13))
        # end wxGlade

    def __do_layout(self):
        self.InitComponents()
        # begin wxGlade: PanelServers.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.StaticBoxSizer(self.sizer_3_staticbox, wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.StaticBoxSizer(self.sizer_2_staticbox, wx.VERTICAL)
        sizer_OSDB = wx.StaticBoxSizer(self.sizer_OSDB_staticbox, wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5.Add(self.label_1, 0, wx.ADJUST_MINSIZE, 0)
        sizer_5.Add(self.combo_osdb_server, 1, wx.ADJUST_MINSIZE, 0)
        sizer_5.Add(self.button_testosdb, 0, wx.LEFT|wx.ADJUST_MINSIZE, 7)
        sizer_OSDB.Add(sizer_5, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_OSDB, 0, wx.EXPAND, 0)
        sizer_2.Add(self.static_line_1, 0, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 0, wx.EXPAND, 0)
        sizer_4.Add(self.label_2, 0, wx.ADJUST_MINSIZE, 0)
        sizer_4.Add(self.text_proxyserver, 0, wx.ADJUST_MINSIZE, 0)
        sizer_4.Add(self.label_3, 0, wx.LEFT|wx.ADJUST_MINSIZE, 9)
        sizer_4.Add(self.text_proxyport, 0, wx.ADJUST_MINSIZE, 0)
        sizer_3.Add(sizer_4, 0, wx.BOTTOM|wx.EXPAND, 4)
        sizer_6.Add(self.label_4, 0, wx.ADJUST_MINSIZE, 0)
        sizer_6.Add(self.text_proxyuser, 0, wx.ADJUST_MINSIZE, 0)
        sizer_3.Add(sizer_6, 0, 0, 0)
        sizer_7.Add(self.label_5, 0, wx.ADJUST_MINSIZE, 0)
        sizer_7.Add(self.text_proxypass, 0, wx.ADJUST_MINSIZE, 0)
        sizer_3.Add(sizer_7, 0, wx.EXPAND, 0)
        sizer_1.Add(sizer_3, 0, wx.EXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        # end wxGlade
    def InitComponents(self):
        self.Bind(wx.EVT_TEXT, self.OnChangeComboHosts,self.combo_osdb_server)

	self.Bind(wx.EVT_BUTTON, self.OnButtonServerOSDB, self.button_testosdb)
	
           
    def OnChangeComboHosts(self,evt):

        if self.combo_osdb_server:
            self.button_testosdb.Enable()
        else:
            self.button_testosdb.Disable()
    
    def OnButtonServerOSDB(self,evt):
	wx.BeginBusyCursor()
	if self.text_proxyserver.GetValue():
	    transport = globals.ProxiedTransport()
	    if not self.text_proxyport.GetValue():
		self.text_proxyport.SetValue("8080")
	    userpass = ""
	    if self.text_proxyuser.GetValue():
		userpass = self.text_proxyuser.GetValue()+ ":" + self.text_proxypass.GetValue() +"@"
	    proxy_address =  userpass +  self.text_proxyserver.GetValue() + ":" + self.text_proxyport.GetValue()
	    #print proxy_address
	    transport.set_proxy(proxy_address)
	else:
	    transport = globals.GtkTransport()
	osdb_server = self.combo_osdb_server.GetValue()
	if not osdb_server.lower().startswith("http://"):
	    wx.MessageBox(_("%s is not a valid http:// address") % osdb_server)
	    wx.EndBusyCursor()
	    return
	else:
	    
	    #if not osdb_server.endswith("/"):
		 #osdb_server += "/"
		 #self.combo_osdb_server.SetValue(osdb_server)
		 
	    server = Server(osdb_server,transport)
	    try: 
		serverinfo = server.ServerInfo()
		text = ""
		for key,value in serverinfo.items():
		    text += key + " : " + str(value) + "\n"
		wx.MessageBox(text, _("OSDB Server Info"))
		wx.EndBusyCursor()
	    except:
		wx.MessageBox(_("The OSDB server address is unreacheable"), _("Error"))
		wx.EndBusyCursor()
		return
	    
	    
# end of class PanelServers

